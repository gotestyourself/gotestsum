version: 2.1

orbs:
  image:
    orbs:
      kaniko: glenjamin/kaniko-publish@0.0.4
    jobs:
      build:
        executor: kaniko/kaniko
        parameters:
          go_image:
            description: "Base golang image"
            type: string
          target:
            description: "Dockerfile target"
            type: string
            default: "dev-with-source"
        steps:
          - checkout
          - run:
              name: "Login"
              environment:
                DOCKER_LOGIN: gotestsumci
                DOCKER_PASSWORD: thispasswordisnotsecure
              command: |
                auth=$(printf "${DOCKER_LOGIN}:${DOCKER_PASSWORD}" | base64)
                mkdir -p /kaniko/.docker
                cat \<< JSON > /kaniko/.docker/config.json
                {"auths": {"https://index.docker.io/v1/": {"auth": "${auth}"}}}
                JSON
          - kaniko/build_and_push:
              dockerfile: dobifiles/Dockerfile
              image: gotesttools/gotestsum-ci
              tag: golang-<< parameters.go_image >>-${CIRCLE_SHA1}
              extra_build_args: "--target << parameters.target >> --build-arg GOLANG_VERSION=<< parameters.go_image >>"

  test:
    executors:
      golang:
        parameters:
          version:
            type: string
        docker:
          - image: golang:<< parameters.version >>
        working_directory: /work

    jobs:
      run:
        parameters:
          version:
            type: string
        executor:
          name: golang
          version: << parameters.version >>
        steps:
          - run: apk add --no-cache git bash
          - checkout
          - run:
              name: "Unit Test << parameters.version >>"
              command: |
                go version
                scripts/build
                scripts/test-unit

          - store_test_results:
              path: junit/


jobs:

  lint:
    docker:
      - image: 'gotesttools/gotestsum-ci:golang-1.10-alpine-${CIRCLE_SHA1}'
    working_directory: /go/src/gotest.tools/gotestsum
    steps:
      - run:
          name: "Lint"
          command: |
            dep ensure
            gometalinter --config=.gometalinter.json ./...

  test-golang-1-10:
    docker:
      - image: 'gotesttools/gotestsum-ci:golang-1.10-alpine-${CIRCLE_SHA1}'
    working_directory: /go/src/gotest.tools/gotestsum
    steps:
      - run:
          name: "Unit Test GO 1.10"
          command: |
            go version
            mkdir -p junit/gotest
            dep ensure
            scripts/build
            scripts/test-unit

      - store_test_results:
          path: junit/

  release:
    docker: [{image: 'circleci/golang:1.11'}]
    working_directory: /go/src/gotest.tools/gotestsum
    steps:
      - checkout
      - deploy:
          name: "release"
          command: |
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
            go get github.com/goreleaser/goreleaser
            goreleaser --rm-dist --skip-validate

workflows:
  version: 2
  ci:
    jobs:
      - image/build:
          go_image: 1.10-alpine
          name: ci-image-golang-1.10
      - test-golang-1-10:
          name: test-golang-1.10
          requires: [ci-image-golang-1.10]

      - test/run:
          name: test-golang-1.11
          version: 1.11-alpine

      - test/run:
          name: test-golang-1.12
          version: 1.12rc1-alpine

      - image/build:
          go_image: 1.11-alpine
          target: linter-with-source
          name: ci-image-lint
      - lint:
          requires: [ci-image-lint]

      - release:
          filters:
            tags: {only: '/v[0-9]+(\.[0-9]+)*/'}
            branches: {ignore: '/.*/'}
