version: 2.1

orbs:
  image:
    orbs:
      kaniko: glenjamin/kaniko-publish@0.0.3
    jobs:
      build:
        executor: kaniko/kaniko
        steps:
          - checkout
          - run:
              name: "Login"
              environment:
                DOCKER_LOGIN: gotestsumci
                DOCKER_PASSWORD: thispasswordisnotsecure
              command: |
                auth=$(printf "${DOCKER_LOGIN}:${DOCKER_PASSWORD}" | base64)
                mkdir -p /kaniko/.docker
                cat \<< JSON > /kaniko/.docker/config.json
                {"auths": {"https://index.docker.io/v1/": {"auth": "${auth}"}}}
                JSON
          - kaniko/build_and_push:
              dockerfile: dobifiles/Dockerfile
              image: gotesttools/gotestsum-ci
              tag: golang-1.10-${CIRCLE_SHA1}
              extra_build_args: "--target dev-with-source --build-arg GOLANG_VERSION=1.10-alpine"

jobs:

  lint:
    working_directory: /work
    docker: [{image: 'docker:18.03-git'}]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: docker version
      - run:
          name: "Install Dependencies"
          command: |
            docker build -f dobifiles/Dockerfile \
              --target dev-with-source \
              --tag testsum-builder:$CIRCLE_BUILD_NUM .
            docker run --name \
                deps-$CIRCLE_BUILD_NUM testsum-builder:$CIRCLE_BUILD_NUM \
                dep ensure
            docker cp \
                deps-$CIRCLE_BUILD_NUM:/go/src/gotest.tools/gotestsum/vendor \
                .
      - run:
          name: "Lint"
          command: |
            docker build -f dobifiles/Dockerfile \
            --target linter-with-source \
            --tag testsum-linter:$CIRCLE_BUILD_NUM .
            docker run --rm testsum-linter:$CIRCLE_BUILD_NUM

  test-golang-1-10:
    docker:
      - image: 'gotesttools/gotestsum-ci:golang-1.10-${CIRCLE_SHA1}'
    steps:
      - run:
          name: "Unit Test GO 1.10"
          command: |
            mkdir -p junit/gotest
            dep ensure
            scripts/build
            scripts/test-unit

      - store_test_results:
          path: junit/

  test-golang-1-11:
    working_directory: /work
    docker: [{image: 'docker:17.06-git'}]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Unit Test GO 1.11"
          command: |
            scripts/ci/test 1.11-alpine
            mkdir -p junit/gotest
            docker cp \
                test-$CIRCLE_BUILD_NUM:/go/src/gotest.tools/gotestsum/junit.xml \
                junit/gotest/junit.xml

      - store_test_results:
          path: junit/

  test-golang-1-12:
    working_directory: /work
    docker: [{image: 'docker:17.06-git'}]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Unit Test GO 1.12"
          command: |
            scripts/ci/test 1.12rc1-alpine
            mkdir -p junit/gotest
            docker cp \
                test-$CIRCLE_BUILD_NUM:/go/src/gotest.tools/gotestsum/junit.xml \
                junit/gotest/junit.xml

      - store_test_results:
          path: junit/

  release:
    docker: [{image: 'circleci/golang:1.11'}]
    working_directory: /go/src/gotest.tools/gotestsum
    steps:
      - checkout
      - deploy:
          name: "release"
          command: |
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
            go get github.com/goreleaser/goreleaser
            goreleaser --rm-dist --skip-validate

workflows:
  version: 2
  ci:
    jobs:
      - image/build:
          name: ci-image-golang-1.10

#      - lint
      - test-golang-1-10:
          name: test-golang-1.10
          requires: [ci-image-golang-1.10]
#      - test-golang-1-11
#      - test-golang-1-12
      - release:
          filters:
            tags: {only: '/v[0-9]+(\.[0-9]+)*/'}
            branches: {ignore: '/.*/'}
